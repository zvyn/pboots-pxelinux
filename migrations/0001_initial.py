# Generated by Django 2.2 on 2019-04-11 21:40

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pxelinux.ip


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu_label', models.CharField(help_text='Title of the item. Used as representation in boot menus.', max_length=79)),
                ('kernel', models.CharField(help_text='Path to the operating system binary (mostly a Linux-Kernel, more at http://www.syslinux.org/wiki/index.php/SYSLINUX#KERNEL_file).', max_length=2047)),
                ('initrd', models.CharField(blank=True, help_text='Path to an initramfs, if any.', max_length=2047)),
                ('append', models.CharField(blank=True, help_text='Command-line arguments for the kernel.', max_length=2047)),
                ('label', models.SlugField(help_text='Unique descriptive identifier for the item. Used by admins and PXELINUX to re-identify items.', unique=True)),
                ('password', models.CharField(blank=True, help_text='If set, users have to type the given password to boot this item.', max_length=10)),
                ('ipappend', models.CharField(blank=True, choices=[('', 'no'), ('1', 'yes')], default='', max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='MachineSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name.', max_length=1023)),
                ('ip_ranges', pxelinux.ip.IPRangesField(blank=True, help_text='List of IP-addresses or IP-address-ranges. For example:" \'127.0.0.1\', \'192.168/16\', (\'10.0.0.1\', \'10.0.0.19\'), \'::1\', \'fe80::/10\', \'::ffff:172.16.0.2\'"', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Used as entry-title when used as sub-menu.', max_length=79)),
                ('password', models.CharField(blank=True, help_text='If set the user has to type in the given password to switch into this menu (if it is used as sub-menu) or go to the PXELINUX command prompt (if this menu is set as main-menu).', max_length=10)),
                ('background_image', models.URLField(blank=True, help_text='HTTP-URL to an Image of the size 640x480 in PNG or JPEG format.')),
                ('label', models.SlugField(help_text='Unique descriptive identifier for the menu. Used by admins and PXELINUX to re-identify menus.', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_start', models.TimeField(default=datetime.time(0, 0))),
                ('time_end', models.TimeField(default=datetime.time(23, 59, 59))),
                ('priority', models.IntegerField(default=50)),
                ('ui', models.CharField(choices=[('none', 'Direct Boot'), ('vesa', 'Graphical Menu'), ('text', 'Text Menu')], max_length=4)),
                ('timeout', models.SmallIntegerField(default=100, help_text='in deciseconds')),
                ('machine_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pxelinux.MachineSet')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pxelinux.Menu')),
            ],
            options={
                'ordering': ['priority', 'time_start', 'time_end'],
            },
        ),
        migrations.CreateModel(
            name='MenuRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('sub_menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_menu', to='pxelinux.Menu')),
                ('super_menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='super_menu', to='pxelinux.Menu')),
            ],
            options={
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pxelinux.Item')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pxelinux.Menu')),
            ],
            options={
                'ordering': ['priority'],
            },
        ),
        migrations.AddField(
            model_name='menu',
            name='items',
            field=models.ManyToManyField(blank=True, help_text='Items to show in this menu.', through='pxelinux.MenuItem', to='pxelinux.Item'),
        ),
        migrations.AddField(
            model_name='menu',
            name='menus',
            field=models.ManyToManyField(blank=True, help_text='Sub-menus to show at the end of this menu.', through='pxelinux.MenuRelation', to='pxelinux.Menu'),
        ),
        migrations.AddField(
            model_name='menu',
            name='owner',
            field=models.ForeignKey(help_text='Only the given user and super-users can modify this menu.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='machineset',
            name='menus',
            field=models.ManyToManyField(through='pxelinux.TimeSlot', to='pxelinux.Menu'),
        ),
        migrations.AddField(
            model_name='machineset',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='machine_sets', to=settings.AUTH_USER_MODEL),
        ),
    ]
